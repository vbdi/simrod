corruption: contrast
severity: 3

test:
  severity: 0

username: ${env:USER}

# GUILD_HOME: /home/${username}/.guild

split: train2017-second_half
ckpt_run_id: coco_5x_source                # defines initial checkpoint
pseudo_run_id: ${ckpt_run_id}              # defines pseudolabels in the training data, and the initial weights for pseudolabeling in step 1 and 3
output_run_id: coco-prop-5x-${corruption}  # defines the run id of the current job (where labels, predictions, and training results are saved)
result_dir: ${env:GUILD_HOME}/runs/coco/${output_run_id}

# step 1 generate labels
step_1:
  weights: ${env:GUILD_HOME}/runs/coco/${pseudo_run_id}/weights/best.pt   # initial weights to do the pseudo-labeling
  source: /home/${username}/data/coco_yolo/images/${split}-${corruption}-${severity}     # images to label
  labels_dir: /home/${username}/data/coco_yolo/pseudolabels/${output_run_id}/labels/${split}-${corruption}-${severity}
  predictions_dir: /home/${username}/data/coco_yolo/pseudolabels/${output_run_id}/predictions/${split}-${corruption}-${severity}

# step 2 train
step_2:
  weights: ${env:GUILD_HOME}/runs/coco/${ckpt_run_id}/weights/best.pt
  # train data as 1) directory: path/images/, 2) file: path/images.txt, or 3) list: [path1/images/, path2/images/]
  train:
    - /home/${username}/data/coco_yolo/labels/train2017-first_half   # source data must be put first in the train list!
    - ${step_1.labels_dir}
  result_dir: ${result_dir}/step2_output

# step 3 generate labels
step_3:
  weights: ${step_2.result_dir}/weights/best.pt  # use ${step_1.weights} when using 5X pseudolabels to adapt a smaller model
  source: ${step_1.source}
  labels_dir: /home/${username}/data/coco_yolo/pseudolabels/${output_run_id}-refined/labels/${split}-${corruption}-${severity}
  predictions_dir: /home/${username}/data/coco_yolo/pseudolabels/${output_run_id}-refined/predictions/${split}-${corruption}-${severity}

# step 4 traind.step_4.train
step_4:
  # train data as 1) directory: path/images/, 2) file: path/images.txt, or 3) list: [path1/images/, path2/images/]
  weights: ${step_2.result_dir}/weights/best.pt
  train:
    - /home/${username}/data/coco_yolo/labels/train2017-first_half   # source data must be put first in the train list!
    - ${step_3.labels_dir}
  result_dir: ${result_dir}/final_output


# val data as 1) directory: path/images/, 2) file: path/images.txt, or 3) list: [path1/images/, path2/images/]
val: /home/${username}/data/coco_yolo/labels/val2017-${corruption}-${test.severity}
clean_test: /home/${username}/data/coco_yolo/labels/val2017
corrupt_test: /home/${username}/data/coco_yolo/labels/val2017-${corruption}-${test.severity}


# number of classes
nc: 80

names:  ['person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light',
         'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep', 'cow',
         'elephant', 'bear', 'zebra', 'giraffe', 'backpack', 'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee',
         'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard',
         'tennis racket', 'bottle', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple',
         'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair', 'couch',
         'potted plant', 'bed', 'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone',
         'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors', 'teddy bear',
         'hair drier', 'toothbrush']

